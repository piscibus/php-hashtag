<?php

declare(strict_types=1);

use Piscibus\PhpHashtag\Extractor;
use function PHPUnit\Framework\assertEquals;

test('extract with english text', function () {
    $extractor = new Extractor();

    $actual = $extractor->extract(
        'This is a #test and another #test2 and #foo_bar and #FooBar and #foo@bar #__ #foo__bar #2023 #ðŸ‘‹ #foo_ðŸ‘‹'
    );

    assertEquals(
        ['#test', '#test2', '#foo_bar', '#FooBar', '#foo', '#__', '#foo__bar', '#2023', '#foo_'],
        $actual
    );
});

test('extract with arabic text', function () {

    $extractor = new Extractor();

    $actual = $extractor->extract('Ù‡Ø°Ø§ Ù‡Ùˆ #ØªØ¬Ø±Ø¨Ø© Ùˆ #ØªØ¬Ø±Ø¨Ø©2 Ùˆ #foo_bar Ùˆ #FooBar Ùˆ #foo Ùˆ #ÙƒÙ„Ù…Ø©_Ùˆ_Ø£Ø®Ø±Ù‰');

    assertEquals(
        ['#ØªØ¬Ø±Ø¨Ø©', '#ØªØ¬Ø±Ø¨Ø©2', '#foo_bar', '#FooBar', '#foo', '#ÙƒÙ„Ù…Ø©_Ùˆ_Ø£Ø®Ø±Ù‰'],
        $actual
    );
});

test('extract with french text', function () {
    $extractor = new Extractor();

    $actual = $extractor->extract('Ceci est un #test et un autre #test2 et #foo_bar et #FooBar et #foo et #superposÃ©s');

    assertEquals(
        ['#test', '#test2', '#foo_bar', '#FooBar', '#foo', '#superposÃ©s'],
        $actual
    );
});

test('extract with german text', function () {
    $extractor = new Extractor();

    $actual = $extractor->extract(
        'Dies ist ein #test und ein anderer #test2 und #foo_bar und #FooBar und #foo und #Ã¼berlappend'
    );

    assertEquals(
        ['#test', '#test2', '#foo_bar', '#FooBar', '#foo', '#Ã¼berlappend'],
        $actual
    );
});

test('extract with turkish text', function () {
    $extractor = new Extractor();

    $actual = $extractor->extract('Bu bir #test ve baÅŸka bir #test2 ve #foo_bar ve #FooBar ve #foo ve #Ã¼stÃ¼ste');

    assertEquals(
        ['#test', '#test2', '#foo_bar', '#FooBar', '#foo', '#Ã¼stÃ¼ste'],
        $actual
    );
});

test('extract with spanish text', function () {
    $extractor = new Extractor();

    $actual = $extractor->extract('Esto es un #test y otro #test2 y #foo_bar y #FooBar y #foo y #superpuestos');

    assertEquals(
        ['#test', '#test2', '#foo_bar', '#FooBar', '#foo', '#superpuestos'],
        $actual
    );
});
